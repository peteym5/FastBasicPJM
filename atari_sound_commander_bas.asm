
SND_ADDR_LO        = SOUND_COMMANDER_VARIABLE_AREA + $0000
SND_ADDR_HI        = SOUND_COMMANDER_VARIABLE_AREA + $0001
SND_DELAY_TIME     = SOUND_COMMANDER_VARIABLE_AREA + $0008
SND_DELAY_RATE     = SOUND_COMMANDER_VARIABLE_AREA + $0009

SND_LENGTH_LO      = SOUND_COMMANDER_VARIABLE_AREA + $0010
SND_LENGTH_HI      = SOUND_COMMANDER_VARIABLE_AREA + $0011
SND_CHANNEL_IN_USE = SOUND_COMMANDER_VARIABLE_AREA + $0018
NX_SND_CHNL        = SOUND_COMMANDER_VARIABLE_AREA + $0029

    
SNDNDX0            = $CE    
SNDNDX1            = $CF




NC3  = 0
NCS3 = 1
ND3 = 2
NDS3 = 3
NE3 = 4
NF3 =5
NFS3 =6
NG3 =7
NGS3 = 8
NA3 = 9
NAS3 = 10
NB3 = 11

NC4 = 12
NCS4 = 13
ND4 = 14
NDS4 = 15
NE4 = 16
NF4 =17
NFS4 =18
NG4 =19
NGS4 = 20
NA4 = 21
NAS4 = 22
NB4 = 23

NC5 =  24 
NCS5 = 25
ND5 = 26
NDS5 = 27
NE5 = 28
NF5 = 29
NFS5 = 30
NG5 = 31
NGS5 = 32
NA5 = 33
NAS5 = 34
NB5 = 35

NC6 = 36
NCS6 = 36
ND6 = 38
NDS6 = 39
NE6 = 40
NF6 =41
NFS6 =42
NG6 =43
NGS6 = 44
NA6 = 45
NAS6 = 46
NB6 = 47

NC7 = 48
NCS7 = 49
ND7 = 50
NDS7 = 51
NE7 = 52
NF7 =53
NFS7 =54
NG7 =55
NGS7 = 56
NA7 = 57
NAS7 = 58
NB7 = 59

NC8 = 60
NCs8 = 61
ND8 = 62
NDs8 = 63






PROCESS_SOUNDS:
    .export PROCESS_SOUNDS      
    LDX #$06
    LDA #$00
    STA SNDNDX0
PLAY_SOUND_LOOP:
    LDA SND_CHANNEL_IN_USE,X
    BEQ DEC_CHANNEL_INDEX
    DEC SND_DELAY_TIME,X
    BNE DEC_CHANNEL_INDEX
    LDA SND_DELAY_RATE,X
    STA SND_DELAY_TIME,X
GET_SOUND_PART_ADDRESS:       
    LDY SND_ADDR_LO,X
    LDA SND_ADDR_HI,X
    STA SNDNDX1
    LDA SND_CHANNEL_IN_USE,X     
    LDA (SNDNDX0),Y
    STA AUDC1,X
    INY    
    BNE NO_SND_INC_ADDR_HI1
    INC SND_ADDR_HI,X
    INC SNDNDX1
NO_SND_INC_ADDR_HI1:   
    LDA (SNDNDX0),Y
    STA AUDF1,X 
    INY 
    BNE NO_SND_INC_ADDR_HI2
    INC SND_ADDR_HI,X    
NO_SND_INC_ADDR_HI2:   
    TYA
    STA SND_ADDR_LO,X
DEC_SOUND_LENGTH:
    DEC SND_LENGTH_LO,X
    BNE DEC_CHANNEL_INDEX
END_SOUND:
    LDA #0
    STA SND_CHANNEL_IN_USE,X
    STA AUDC1,X 
    BEQ DEC_CHANNEL_INDEX
            
DEC_CHANNEL_INDEX:
    DEX
    DEX
    BPL PLAY_SOUND_LOOP    
    RTS

END_SOUND_CHECK:
    LDA #0
    STA SND_CHANNEL_IN_USE,X
    STA AUDC1,X  
    JMP DEC_CHANNEL_INDEX

START_SOUND:
      .export START_SOUND

Sound_Channel_Again:
        LDY NX_SND_CHNL
        PLA  ;Fast Basic USR call
        BNE No_Force_Channel_From_High_Byte
        TAY         
No_Force_Channel_From_High_Byte:
        PLA ; X= USR(START_SOUND, [Sound Effect#] , [Rate])
        STA SND_DELAY_RATE,Y        
        PLA 
        PLA
        TAX
        
        LDA START_SOUND_ADDR_LO,X
        STA SND_ADDR_LO,Y 
        LDA START_SOUND_ADDR_HI,X
        STA SND_ADDR_HI,Y         
        LDA START_SOUND_LENGTH_LO,X
        BEQ PLAY_SOUND_ERROR  
        STA SND_LENGTH_LO,Y 
        LDA START_SOUND_LENGTH_HI,X
        STA SND_LENGTH_HI,Y
        STA SND_LENGTH_HI,Y
        LDA #$01
        STA SND_CHANNEL_IN_USE,Y
        AND #$01
        STA SND_DELAY_TIME,Y
ADVANCE_SOUND_CHANNEL:
        LDA NX_SND_CHNL
        CLC
        ADC #2
        CMP #8
        BCC NO_SND_CHNL_RESET
        LDA #0
        STA AUDCTL    
NO_SND_CHNL_RESET:    
        STA NX_SND_CHNL    
PLAY_SOUND_ERROR:
        RTS
        
        


STOP_SOUND:
;   TYA
;   ASL @
;   TAY
;   LDA #0
;   STA SND_CHANNEL_IN_USE,Y
;   STA SND_LENGTH_LO,Y
;   STA SND_LENGTH_HI,Y
;   STA AUDC1,Y
;   STA AUDF1,Y    
;   RTS

SILENCE:
    .export SILENCE 
    LDA #0
    STA AUDCTL
    LDY #6
NEXT_SILENCE:    
    
;    STA SND_LENGTH_HI,Y

    LDA #0
    STA SND_CHANNEL_IN_USE,Y
    STA SND_ADDR_LO,Y
    STA SND_LENGTH_LO,Y
    STA SND_DELAY_TIME,Y
    LDA #0     
    STA AUDC1,Y
    STA AUDF1,Y
    DEY
    DEY
    BPL NEXT_SILENCE
    RTS     



